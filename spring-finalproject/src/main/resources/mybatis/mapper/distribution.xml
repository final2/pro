<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.finalproject.dao.DistributionDao">
<!-- 거래처======================================================================================================= -->
	<!-- 거래처 등록 -->
	<insert id="insertClient" parameterType="Client">
		insert into client
			(no, name, isAdmit)
		values
			(myclient_seq.nextval, #{name}, 'Y')
	</insert>
	
	<!-- 거래처 리스트 / 발주 신청시 거래처명 -->
	<select id="getClients" resultType="Client">
		select
			no,
			name,
			isAdmit
		from
			client
		order by 
			name asc
	</select>
	
	<!-- 번호로 거래처 조회 -->
	<select id="getClientsByNo" parameterType="int" resultType="Client">
		select 
			no,
			name,
			isAdmit
		from 
			client
		where 
			no = #{value}
	</select>
	
	<!-- 거래처 번호로 상품 조회 / 발주 신청시 사용 -->
	<select id="getClientDetailsByNo" parameterType="int" resultType="ClDetail">
		select
			c.qty			as qty,
			p.name			as "product.name",
			p.client_no		as clientNo,
			p.price			as "product.price",
			p.no			as "product.no"
		from
			client_detail c, product p
		where
			c.product_no = p.no
			and c.client_no = #{value}
		order by 
			p.name asc
	</select>
	
	<!-- 거래처 수정 -->
	<update id="updateClient" parameterType="Client">
		update client
			set
				name = #{name},
				isAdmit = #{isAdmit}
		where no = #{no}
	</update> 
	
	<!-- 게시글 총 수 불러오기 -->
	<select id="getTotalClient" resultType="int">
		select 
			count(*)  
		from client
	</select>
	
	<!-- 페이지당 리스트 불러오기 -->
	<select id="getBeginEndClients" parameterType="PV" resultType="Client">
		select
			rank,
			no 	as no, 
			name as name, 
			isAdmit 	as isAdmit
		from (select row_number() OVER(order by no desc) as rank, no, name, isAdmit
			  from client
			  order by rank)
		where rank >= #{beginIndex} and rank &lt;= #{endIndex}
	</select>
	
<!-- 발주 ======================================================================================================= -->
	<!-- 발주 신청시 발주 번호 생성 -->
	<select id="getOrderNo" resultType="int">
		select
			myorder_seq.nextval
		from
			dual
	</select>
	
	<!-- 발주 신청 리스트 조회 -->
	<select id="getHqOrders" resultType="HqOrder">
		select
			h.no			as no,
			h.isconfirm		as confirm,
			h.regdate		as regdate,
			h.client_no		as "client.no",
			c.name			as "client.name"
		from
			hq_order h, client c
		where
			c.no = h.client_no
		order by
			regdate desc
	</select>
	
	<!-- 발주 신청(발주번호, 거래처 이름, 입고여부, 신청일 저장) -->
	<insert id="addNewOrder" parameterType="HqOrder">
		insert into hq_order
			(no, client_no, isconfirm, regdate)
		values
			(${no}, #{client.no}, 'N', sysdate)
	</insert>
	
	<!-- 발주 신청(신청일, 수량, 발주번호, 상품번호, 가격 저장) -->
	<insert id="addNewProductOrder" parameterType="HOD">
		insert into hq_order_detail
			(no, regdate, qty, hq_order_no, product_no, price)
		values
			(my_seq.nextval, sysdate, #{qty}, #{hqOrder.no}, #{product.no}, #{product.price})
	</insert>
	
	<!-- 번호로 발주 정보 조회 -->
	<select id="getOrderByNo" parameterType="int" resultType="HqOrder">
		select
			h.no		as no,
			h.isconfirm	as confirm,
			h.regdate	as regdate,
			h.client_no	as "client.no",
			c.name		as "client.name"
		from
			hq_order h, client c
		where 
			h.client_no = c.no
			and h.no = #{value}
	</select>
	
	<!-- 발주번호로 상품정보 조회 -->
	<select id="getOrderDetailByNo" parameterType="int" resultType="HOD">
		select
			d.no			as no,
			d.regdate		as "hqOrder.regdate",
			d.qty			as qty,
			d.hq_order_no	as "hqOrder.no",
			d.product_no	as "product.no",
			p.name			as "product.name",
			d.price			as "product.price"
		from
			hq_order_detail d, hq_order h, product p, client c
		where
			d.hq_order_no = h.no 
			and d.product_no = p.no
			and c.no = h.client_no
			and d.hq_order_no = #{value}
	</select>
	
	<!-- 입고 확인 여부 변경 -->
	<update id="updateCon" parameterType="HqOrder">
		update hq_order
			set
				isconfirm = 'Y'
			where 
				no = #{no}
	</update>
	
	<!-- 발주 정보 수정 -->
	<update id="updateOrder" parameterType="HOD">
		update hq_order_detail
			set
				qty = #{qty}
			where
				hq_order_no = #{hqOrder.no}
				and product_no = #{product.no}
	</update>
</mapper>